[versions]
assertk = "0.28.1"
auto-service = "1.1.1"
commons-lang = "3.17.0"
coroutines = "1.10.2"
dag-command = "1.13.0"
dekorate = "4.1.5"
dependency-analysis = "2.18.0"
detekt = "1.23.8"
dokka = "2.0.0"
graphqlExtendedScalars = "2023-01-24T02-11-56-babda5f"
graphqlKotlin = "8.8.0"
# @keep unused
jdk = "21"
jimmer = "0.9.89"
junit = "5.13.1"
kobby = "5.2.0"
kotlin = "2.1.21"
kotlinxSerialization = "1.8.1"
kotlinxSerializationPlugin = "2.1.21"
ksp = "2.1.21-2.0.1"
ksp-auto-service = "1.2.0"
ktor = "3.1.3"
logging-jvm = "7.0.7"
logitech = "1.20.0"
micronaut = "4.8.2"
micronautPlugin = "4.5.3"
# @pin
opentelemetry = "1.48.0"
phaseTwo = "0.1.11"
rsocket = "0.20.0"
valiktor = "0.12.0"

[libraries]
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
auto-service = { module = "com.google.auto.service:auto-service-annotations", version.ref = "auto-service" }
commons-lang = { module = "org.apache.commons:commons-lang3", version.ref = "commons-lang" }
dekorate-kubernetes-annotations = { module = "io.dekorate:kubernetes-annotations", version.ref = "dekorate" }
dekorate-prometheus-annotations = { module = "io.dekorate:prometheus-annotations", version.ref = "dekorate" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
graphql-scalars = { module = "com.graphql-java:graphql-java-extended-scalars", version.ref = "graphqlExtendedScalars" }
jimmer-sql-kotlin = { module = "org.babyfish.jimmer:jimmer-sql-kotlin", version.ref = "jimmer" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-graphql = { module = "com.expediagroup:graphql-kotlin-server", version.ref = "graphqlKotlin" }
kotlin-graphql-persisted-queries = { module = "com.expediagroup:graphql-kotlin-automatic-persisted-queries", version.ref = "graphqlKotlin" }
kotlin-graphql-schema-generator = { module = "com.expediagroup:graphql-kotlin-schema-generator", version.ref = "graphqlKotlin" }
kotlin-logging-jvm = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "logging-jvm" }
kotlin-rsocket-ktor-server = { module = "io.rsocket.kotlin:rsocket-ktor-server", version.ref = "rsocket" }
kotlin-rsocket-transport-ktor-tcp = { module = "io.rsocket.kotlin:rsocket-transport-ktor-tcp", version.ref = "rsocket" }
kotlin-valiktor-core = { module = "org.valiktor:valiktor-core", version.ref = "valiktor" }
kotlinx-coroutines-bom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "coroutines" }
kotlinx-serialization-bom = { module = "org.jetbrains.kotlinx:kotlinx-serialization-bom", version.ref = "kotlinxSerialization" }
ksp-auto-service = { module = "dev.zacsweers.autoservice:auto-service-ksp", version.ref = "ksp-auto-service" }
ksp-jimmer = { module = "org.babyfish.jimmer:jimmer-ksp", version.ref = "jimmer" }
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
logitech-jts-core = { module = "org.locationtech.jts:jts-core", version.ref = "logitech" }
micronaut-platform = { module = "io.micronaut.platform:micronaut-platform", version.ref = "micronaut" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry" }
phaseTwo-admin-client = { module = "io.phasetwo:phasetwo-admin-client", version.ref = "phaseTwo" }

[plugins]
dagCommand = { id = "io.github.leandroborgesferreira.dag-command", version.ref = "dag-command" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependency-analysis" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kobby = { id = "io.github.ermadmi78.kobby", version.ref = "kobby" }
kotlin = { id = "org.jetbrains.kotlin", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinxSerializationPlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
micronaut = { id = "io.micronaut.application", version.ref = "micronautPlugin" }
